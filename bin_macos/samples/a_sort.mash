uses <bf>
uses <crt>

/*
 *  Quick sorting algorithm.
 *  Written on Mash!
 */

proc QSort(arr, left, right):
  i ?= left
  j ?= right
  pivot ?= arr[(left + right) \ 2]

  while i < (j + 1):
    while arr[i] < pivot:
      i++
    end

    while arr[j] > pivot:
      j--
    end

    if i < (j + 1):
      tmp ?= arr[i]
      arr[i] ?= arr[j]
      arr[j] ?= tmp
      i++
      j--
    end
  end

  if left < j:
    QSort(arr, left, j)
  end

  if i < right:
    QSort(arr, i, right)
  end
end

/*
 *  Bubble sorting algorithm.
 *  Written on Mash!
 */

proc BSort(array):
  size ?= len(array)
  for(i ?= 0; i < (size - 1); i++):
    flag ?= true
    for(j ?= 0; j < (size - 1); j++):
      if array[j + 1] < array[j]:
        tmp ?= array[j + 1]
        array[j + 1] ?= array[j]
        array[j] ?= tmp
        flag ?= false
      end
    end

    if flag:
      break
    end
  end
end


/*
 *  Print array into console.
 *  Written on Mash!
 */

proc PrintArray(array):
  for (i ?= 0; i < len(array); i++):
    Print(array[i], " ")
  end
  PrintLn(" ")
end


proc main():
  arr ?= new[100000]

  for (i ?= 0; i < 100000; i++):
    arr[99999 - i] ?= copy(i)
  end

  t1 ?= TickCnt()
  QSort(arr, 0, 99999)
  t2 ?= TickCnt() - t1
  PrintLn("Time of sorting: " + t2 + " ms.")

  arr2 ?= new[100]

  for (i ?= 0; i < 100; i++):
    arr2[99 - i] ?= copy(i)
  end

  BSort(arr2)

  PrintArray(arr2)

  gc()
  InputLn()
end
